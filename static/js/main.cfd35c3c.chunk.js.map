{"version":3,"sources":["components/oddsidemenu.js","components/evensidemenu.js","components/sidebar.js","components/todo.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["OddSideMenu","item","input","completeTask","deleteTask","useState","subnav","setSubnav","to","className","onClick","length","icon","title","iconClosed","iconOpened","map","index","cName","value","EvenSideMenu","restoreTask","text","Sidebar","all","completed","incomplete","deleted","handledelete","handleComplete","handleRestore","fullInput","fullComplete","fullIncomplete","fullDelete","menu","setMenu","showMenu","Todo","handleSubmit","inputElement","tab","onSubmit","type","ref","TodoList","handleDelete","updateTodo","id","edit","setEdit","handleUpdate","e","preventDefault","current","App","setInput","completeInput","setCompleteInput","incompleteInput","setIncompleteInput","deleteInput","setDeleteInput","useRef","Task","prev","el","setTimeout","todoLeft","filter","c","incompleteLeft","completeLeft","deletedTodo","todo","test","newTodo","incompleteTodo","addTodo","focus","todoId","newValue","includes","alert","completedTodo","incompletedTodo","inputTodo","deleteLeft","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd35c3c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\nfunction OddSideMenu({item, input, completeTask, deleteTask}) {\r\n    const [subnav, setSubnav] = useState(false)\r\n\r\n    const showSubnav = () => setSubnav(!subnav)\r\n\r\n    return (\r\n        <>\r\n        <Link to='#' className=\"sub-menu\" onClick={input.length > 0 && showSubnav}>\r\n            <div>\r\n                <span className=\"dropdown-icon\">{item.icon}</span>\r\n                <span className=\"drop-list\">{item.title}</span>\r\n            </div>\r\n            <div>\r\n                {input.length > 0 && subnav ? item.iconClosed : input.length > 0 ? item.iconOpened : null}\r\n            </div>\r\n        </Link>\r\n        <div className=\"drop-down\">\r\n            {subnav && input.map((input, index) => {\r\n                    return (\r\n                        <Link className={input.cName} to=\"#\" key={index}>\r\n                            <span className=\"menu-value\">{input.value}</span>\r\n                            <button className=\"btn btn-complete\" onClick={() => completeTask(input)}><AiIcons.AiOutlineCheckCircle /></button>\r\n                            <button className=\"btn btn-delete\" onClick={() => deleteTask(input)}><AiIcons.AiOutlineDelete /></button>\r\n                        </Link>\r\n                    )\r\n                })}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OddSideMenu;","import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction EvenSideMenu({item, input, restoreTask}) {\r\n    const [subnav, setSubnav] = useState(false)\r\n\r\n    const showSubnav = () => setSubnav(!subnav)\r\n\r\n    return (\r\n        <>\r\n        <Link to='#' className=\"sub-menu\" onClick={input.length > 0 && showSubnav}>\r\n            <div>\r\n                <span className=\"dropdown-icon\">{item.icon}</span>\r\n                <span className=\"drop-list\">{item.title}</span>\r\n            </div>\r\n            <div>\r\n                {input.length > 0 && subnav ? item.iconClosed : input.length > 0 ? item.iconOpened : null}\r\n            </div>\r\n        </Link>\r\n        <div className=\"drop-down\">\r\n            {subnav && input.map((input, index) => {\r\n            return (\r\n                <Link className={input.cName} to=\"#\" key={index}>\r\n                        <span className=\"menu-value\">{input.value}</span>\r\n                        <button className=\"btn btn-complete\" onClick={() => restoreTask(input)} >{item.text}</button>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EvenSideMenu;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as FiIcons from 'react-icons/fi';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport OddSideMenu from './oddsidemenu';\r\nimport EvenSideMenu from './evensidemenu';\r\n\r\nfunction Sidebar({ all, completed, incomplete, deleted, handledelete, handleComplete, handleRestore }) {\r\n    const [fullInput] = useState([{\r\n        title: 'All',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        iconOpened: <RiIcons.RiArrowDownSFill />, \r\n        iconClosed: <RiIcons.RiArrowUpSFill />,\r\n    }])\r\n    \r\n    const [fullComplete] = useState([{\r\n        title: 'Completed',\r\n        text: 'Undo',\r\n        icon: <AiIcons.AiOutlineCheckCircle />,\r\n        iconOpened: <RiIcons.RiArrowDownSFill />, \r\n        iconClosed: <RiIcons.RiArrowUpSFill /> \r\n    }])\r\n    \r\n    const [fullIncomplete] = useState([{\r\n        title: 'Unfinished',\r\n        icon: <BiIcons.BiTaskX />,\r\n        iconOpened: <RiIcons.RiArrowDownSFill />, \r\n        iconClosed: <RiIcons.RiArrowUpSFill /> \r\n    }])\r\n    \r\n    const [fullDelete] = useState([{\r\n        title: 'Deleted',\r\n        text: 'Restore',\r\n        icon: <FiIcons.FiTrash />,\r\n        iconOpened: <RiIcons.RiArrowDownSFill />, \r\n        iconClosed: <RiIcons.RiArrowUpSFill /> \r\n    }])\r\n    \r\n    const [menu, setMenu] = useState(false)\r\n\r\n    const showMenu = () => setMenu(!menu);\r\n    return (  \r\n        <div>\r\n            <nav className=\"menu-bars\">\r\n                <Link to=\"#\">\r\n                    <FaIcons.FaBars onClick={showMenu} />\r\n                </Link>\r\n            </nav>\r\n            <section className={menu ? 'sidebar active' : 'sidebar'}>\r\n                <nav className=\"menu-bars\">\r\n                    <Link to=\"#\">\r\n                        <AiIcons.AiOutlineClose onClick={showMenu} />\r\n                    </Link>\r\n                </nav>\r\n                {fullInput.map((item, index) => {\r\n                    return <OddSideMenu input={all} item={item} key={index} completeTask={handleComplete} deleteTask={handledelete} />\r\n                })}\r\n                {fullComplete.map((item, index) => {\r\n                    return <EvenSideMenu input={completed} item={item} key={index} restoreTask={handleRestore} />\r\n                })}\r\n                {fullIncomplete.map((item, index) => {\r\n                    return <OddSideMenu input={incomplete} item={item} key={index} completeTask={handleComplete} deleteTask={handledelete} />\r\n                })}\r\n                {fullDelete.map((item, index) => {\r\n                    return <EvenSideMenu input={deleted} item={item} key={index} restoreTask={handleRestore} />\r\n                })}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\n\r\nfunction Todo({ handleSubmit, inputElement, tab }) {\r\n  return (\r\n    <div className=\"\">\r\n      <h1>What's Your Plan For Today</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" className=\"todo-input\" ref={inputElement} />\r\n        <button type=\"submit\" className=\"todo-btn\">{tab}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./todo\";\r\n\r\nfunction TodoList({\r\n  input,\r\n  handleSubmit,\r\n  inputElement,\r\n  handleDelete,\r\n  updateTodo\r\n}) {\r\n  const [edit, setEdit] = useState({ id: null, value: \"\" });\r\n\r\n\tconst submitUpdate = (e) => {\r\n\t\te.preventDefault();\r\n\t\thandleUpdate(inputElement.current.value);\r\n\t}\r\n\t\r\n\tconst handleUpdate = value => {\r\n\t\tupdateTodo(edit.id, value);\r\n\t\tsetEdit({ id: null, value: \"\" })\r\n\t}\r\n\r\n  if (edit.id) {\r\n    return (\r\n        <>\r\n        {edit ? (\r\n          <div className=\"todo-container\">\r\n            <Todo handleSubmit={submitUpdate} inputElement={inputElement} tab=\"Update\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"todo-container\">\r\n      \t\t\t<Todo handleSubmit={handleSubmit} inputElement={inputElement} tab=\"Add todo\" />\r\n\t\t\t\t\t</div>\r\n        )}\r\n        </>\r\n    )}\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <Todo handleSubmit={handleSubmit} inputElement={inputElement} tab=\"Add todo\" />\r\n\t\t\t<div className=\"todolist-container\">\t\r\n\t\t\t\t{input.map((item, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"todo-list\" key={index}>\r\n\t\t\t\t\t\t\t<span className=\"todo-item\">{item.value}</span>\r\n\t\t\t\t\t\t\t<div className=\"todo-item-btn\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEdit({ id: item.id, value: item.value })}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(item)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport Sidebar from './components/sidebar';\nimport TodoList from './components/todoList';\n\nfunction App() {\n    const [input, setInput] = useState([]); //Stores data for all Input\n    const [completeInput, setCompleteInput] = useState([])\n    const [incompleteInput, setIncompleteInput] = useState([])\n    const [deleteInput, setDeleteInput] = useState([])\n    \n    const inputElement = useRef();\n    \n    const addTodo = (todo) => {\n        if (!todo.value || /^\\s*$/.test(todo.value)) {\n            return;\n        }\n        //Add to All-Input Tab\n        const newTodo = [...input, todo]\n        setInput(newTodo);\n        \n        //Adds to Unfinished Tab\n        const incompleteTodo = [...incompleteInput, todo]\n        setIncompleteInput(incompleteTodo)\n    }\n\n    const updateTodo = (todoId, newValue) => {\n        // if (!newValue.value || /^\\s*$/.test(newValue.value)) {\n            //     return;\n            // }\n            \n        setInput(prev => prev.map(item => (item.id === todoId ? {id: item.id, cName: item.cName,value: newValue} : item)))\n        setIncompleteInput(prev => prev.map(item => (item.id === todoId ? {id: item.id, cName: item.cName,value: newValue} : item)))\n            \n        inputElement.current.value = '';\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTodo({\n            id: input.length + 1,\n            value: inputElement.current.value,\n            cName: 'drop-down-menu'\n        })\n\n        inputElement.current.value = '';\n        inputElement.current.focus();\n    }\n    \n    const handleComplete = (Task) => {\n        if (completeInput.includes(Task)) {\n            alert('Already Completed')\n        } else {\n            //Delete from Unfinished\n            const incompleteLeft = incompleteInput.filter(c => c.id !== Task.id)\n            setIncompleteInput(incompleteLeft)\n    \n            //Add to the Complete Tab\n            const completedTodo = [...completeInput, Task]\n            setCompleteInput(completedTodo)\n        }\n\n    }\n    \n    const handleRestore = (Task) => {\n        if (input.includes(Task)) {\n            //Add to the Unfinished Tab\n            const incompletedTodo = [...incompleteInput, Task]\n            setIncompleteInput(incompletedTodo)\n        } else {\n            //Add to the All Tab\n            const inputTodo = [...input, Task]\n            setInput(inputTodo)\n\n            //Add to the Unfinished Tab\n            const incompletedTodo = [...incompleteInput, Task]\n            setIncompleteInput(incompletedTodo)\n        }\n\n        //Delete from Complete TAB\n        const completeLeft = completeInput.filter(c => c.id !== Task.id)\n        setCompleteInput(completeLeft)\n        \n        //Delete from Delete TAB\n        const deleteLeft = deleteInput.filter(c => c.id !== Task.id)\n        setDeleteInput(deleteLeft)\n    }\n\n    const handleDelete = Task => {\n\n        // Add delete class to All-Input Tab\n        setInput((prev) => prev.map(el => el === Task ? {id: Task.id, value: Task.value, cName: 'drop-down-menu active'} : el))\n        // Add delete class to Unfinished Tab\n        setIncompleteInput((prev) => prev.map(el => el === Task ? {id: Task.id, value: Task.value, cName: 'drop-down-menu active'} : el))\n        // Add delete class to Completed Tab\n        setCompleteInput((prev) => prev.map(el => el === Task ? {id: Task.id, value: Task.value, cName: 'drop-down-menu active'} : el))\n\n        setTimeout(() => {\n            //Delete from All-Input\n            const todoLeft = input.filter(c => c.id !== Task.id)\n            setInput(todoLeft);\n            //Delete from Unfinished\n            const incompleteLeft = incompleteInput.filter(c => c.id !== Task.id)\n            setIncompleteInput(incompleteLeft);\n            //Delete from Complete\n            const completeLeft = completeInput.filter(c => c.id !== Task.id)\n            setCompleteInput(completeLeft)\n            \n            //Add to the Delete Tab\n            const deletedTodo = [...deleteInput, Task]\n            setDeleteInput(deletedTodo)\n\n        }, 1400) //Counts 1.4secs before running\n    }\n    \n    return (\n        <>\n        <TodoList input={input} handleDelete={handleDelete} handleSubmit={handleSubmit} inputElement={inputElement} updateTodo={updateTodo} />\n        <Router>\n            <Sidebar all={input} completed={completeInput} incomplete={incompleteInput} deleted={deleteInput} handledelete={handleDelete} handleComplete={handleComplete} handleRestore={handleRestore}/>\n            <Routes>\n                <Route path=\"/\"></Route>\n            </Routes>\n        </Router>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}